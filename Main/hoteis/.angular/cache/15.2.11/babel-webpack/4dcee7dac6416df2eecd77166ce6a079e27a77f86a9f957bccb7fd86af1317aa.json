{"ast":null,"code":"import { API_CONFIG } from '../config/api.config';\nimport * as i0 from \"@angular/core\";\nexport class ServiceBase {\n  constructor() {\n    this.url = 'hoteis';\n  }\n  findById(id) {\n    return this.httpClient.get(`${API_CONFIG.baseUrl}/${this.url}/${id}`);\n  }\n  findAll() {\n    return this.httpClient.get(`${API_CONFIG.baseUrl}/${this.url}`);\n  }\n  create(object) {\n    return this.httpClient.post(`${API_CONFIG.baseUrl}/${this.url}`, object);\n  }\n  update(object, index) {\n    return this.httpClient.put(`${API_CONFIG.baseUrl}/${this.url}/${index}`, object);\n  }\n  static #_ = this.ɵfac = function ServiceBase_Factory(t) {\n    return new (t || ServiceBase)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ServiceBase,\n    factory: ServiceBase.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAGA,SAASA,UAAU,QAAQ,sBAAsB;;AAKjD,OAAM,MAAOC,WAAW;EAHxBC;IAOE,QAAG,GAAW,QAAQ;;EAEtBC,QAAQ,CAACC,EAAO;IACd,OAAO,IAAI,CAACC,UAAU,CAACC,GAAG,CAAQ,GAAGN,UAAU,CAACO,OAAO,IAAI,IAAI,CAACC,GAAG,IAAIJ,EAAE,EAAE,CAAC;EAC9E;EAEAK,OAAO;IACL,OAAO,IAAI,CAACJ,UAAU,CAACC,GAAG,CAAU,GAAGN,UAAU,CAACO,OAAO,IAAI,IAAI,CAACC,GAAG,EAAE,CAAC;EAC1E;EAEAE,MAAM,CAACC,MAAa;IAClB,OAAO,IAAI,CAACN,UAAU,CAACO,IAAI,CAAQ,GAAGZ,UAAU,CAACO,OAAO,IAAI,IAAI,CAACC,GAAG,EAAE,EAAEG,MAAM,CAAC;EACjF;EAEAE,MAAM,CAACF,MAAa,EAAEG,KAAa;IACjC,OAAO,IAAI,CAACT,UAAU,CAACU,GAAG,CAAQ,GAAGf,UAAU,CAACO,OAAO,IAAI,IAAI,CAACC,GAAG,IAAIM,KAAK,EAAE,EAAEH,MAAM,CAAC;EACzF;EAAC;qBApBUV,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAe,SAAXf,WAAW;IAAAgB,YAFV;EAAM","names":["API_CONFIG","ServiceBase","constructor","findById","id","httpClient","get","baseUrl","url","findAll","create","object","post","update","index","put","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Giancarlo\\Desktop\\MicroServices\\Hotel FrontEnd\\hoteis\\src\\app\\services\\base.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { API_CONFIG } from '../config/api.config';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceBase<Hotel> {\r\n\r\n  private httpClient: HttpClient\r\n\r\n  url: string = 'hoteis';\r\n\r\n  findById(id: any): Observable<Hotel> {\r\n    return this.httpClient.get<Hotel>(`${API_CONFIG.baseUrl}/${this.url}/${id}`);\r\n  }\r\n\r\n  findAll(): Observable<Hotel[]> {\r\n    return this.httpClient.get<Hotel[]>(`${API_CONFIG.baseUrl}/${this.url}`);\r\n  }\r\n\r\n  create(object: Hotel): Observable<Hotel> {\r\n    return this.httpClient.post<Hotel>(`${API_CONFIG.baseUrl}/${this.url}`, object);\r\n  }\r\n\r\n  update(object: Hotel, index: number): Observable<Hotel> {\r\n    return this.httpClient.put<Hotel>(`${API_CONFIG.baseUrl}/${this.url}/${index}`, object);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}